-> A simple Python script to scrape
   data from a static web page.
-> Extract relevant information such as text,
   links, or images from web pages.

  # Script
    import requests
    from bs4 import BeautifulSoup
    
    # Function to scrape a webpage
    def scrape_webpage(url):
        # Fetch the content from the URL
        response = requests.get(url)
        
        # Checking if the request was successful
        if response.status_code == 200:
            # Parsing the HTML content using BeautifulSoup
            soup = BeautifulSoup(response.content, 'html.parser')
            
            # Extract and print all text content
            print("Page Text:")
            print(soup.get_text())
            
            # Extract and print all links
            print("\nLinks:")
            for link in soup.find_all('a', href=True):
                print(f"Text: {link.text}, URL: {link['href']}")
            
            # Extract and print all images
            print("\nImages:")
            for img in soup.find_all('img', src=True):
                print(f"Image Source: {img['src']}, Alt Text: {img.get('alt', 'No alt text')}")
        else:
            print(f"Failed to retrieve the webpage. Status code: {response.status_code}")
    
    # URL of the webpage to scrape
    url = 'https://example.com' 
    
    # Call the function to scrape the webpage
    scrape_webpage(url)
